<% layout("/layouts/boilerplate") %>

<div class="container mb-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow p-4 my-5">
                <h1 class="text-center mb-4">SignUp on Plantify</h1>
                <form action="/users/signup" method="post" class="needs-validation" novalidate onsubmit="return validateForm(event)">
                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" id="username" name="username" class="form-control" 
                               required minlength="3" maxlength="20"
                               title="Username must be 3-20 characters long and can only contain letters, numbers, and underscores"/>
                        <div class="invalid-feedback">
                            Username must be 3-20 characters long and can only contain letters, numbers, and underscores.
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" id="email" name="email" class="form-control" 
                               required pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
                               title="Please enter a valid email address"/>
                        <div class="invalid-feedback">
                            Please enter a valid email address.
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="phone" class="form-label">Phone</label>
                        <input type="tel" id="phone" name="mobno" class="form-control" 
                               required pattern="[0-9]{10}"
                               title="Please enter a valid 10-digit phone number"/>
                        <div class="invalid-feedback">
                            Please enter a valid 10-digit phone number.
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <input type="password" id="password" name="password" class="form-control" 
                               required minlength="8"
                               pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$"
                               title="Password must be at least 8 characters long and include uppercase, lowercase, number and special character"/>
                        <div class="invalid-feedback">
                            Password must be at least 8 characters long and include uppercase, lowercase, number and special character.
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">Confirm Password</label>
                        <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" required/>
                        <div class="invalid-feedback">
                            Passwords do not match.
                        </div>
                    </div>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-success">Sign Up</button>
                        <a href="/users/login" class="btn btn-link text-center">Already have an account? Login</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
function validateForm(event) {
    event.preventDefault();
    const form = event.target;
    const password = form.querySelector('#password');
    const confirmPassword = form.querySelector('#confirmPassword');
    
    // Reset custom validity
    password.setCustomValidity('');
    confirmPassword.setCustomValidity('');

    // Check if passwords match
    if (password.value !== confirmPassword.value) {
        confirmPassword.setCustomValidity('Passwords do not match');
        form.classList.add('was-validated');
        return false;
    }

    // Check form validity
    if (!form.checkValidity()) {
        form.classList.add('was-validated');
        return false;
    }

    // If all validations pass, submit the form
    form.submit();
}

// Real-time password matching validation
document.getElementById('confirmPassword').addEventListener('input', function() {
    const password = document.getElementById('password').value;
    if (this.value !== password) {
        this.setCustomValidity('Passwords do not match');
    } else {
        this.setCustomValidity('');
    }
});

// Show password requirements when password field is focused
document.getElementById('password').addEventListener('focus', function() {
    const requirements = `
        Password must contain:
        - At least 8 characters
        - At least one uppercase letter
        - At least one lowercase letter
        - At least one number
        - At least one special character (@$!%*?&)
    `;
    this.title = requirements;
});
</script>

<style>
.invalid-feedback {
    font-size: 0.875em;
    color: #dc3545;
}

.form-control:focus {
    border-color: #28a745;
    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}
</style>